---
// src/components/Button.astro
interface Props {
  href?: string;
  as?: 'a' | 'button';
  variant?: 'primary' | 'secondary' | 'outline';
  block?: boolean;
  device?: 'desktop' | 'mobile' | 'all';
  external?: boolean; // si true automáticamente target="_blank" rel="noopener noreferrer"
  ariaLabel?: string;
  type?: 'button' | 'submit' | 'reset';
  className?: string;
}

const {
  href,
  as = 'a',
  variant = 'primary',
  block = false,
  device = 'all',
  external = false,
  ariaLabel,
  type = 'button',
  className = '',
  ...rest
} = Astro.props;

// Elemento a renderizar
const Tag = as;

// Construimos el class string EN FORMA EXPLÍCITA (robusto y fácil de depurar)
const classParts = [
  'button',
  `button--${variant}`,
  block ? (device === 'desktop' ? 'desktop-block' : device === 'mobile' ? 'mobile-block' : 'button--block') 
        : (device === 'desktop' ? 'desktop-inline' : device === 'mobile' ? 'mobile-inline' : ''),
  className || ''
].filter(Boolean);

const classes = classParts.join(' ');

// Target / Rel si es externo
const target = external ? '_blank' : rest.target;
const rel = external ? 'noopener noreferrer' : rest.rel;
---

<Tag
  {...(Tag === 'a' ? { href } : {})}
  {...(Tag === 'button' ? { type } : {})}
  class={classes}
  target={Tag === 'a' ? target : undefined}
  rel={Tag === 'a' ? rel : undefined}
  aria-label={ariaLabel}
  {...rest}
>
  <slot />
</Tag>

<style>
  /* =========
       Componentes base
       ========= */
.button {
  align-items: center;
  gap: 0.5rem;
  font-weight: 700;
  border: 1px solid transparent;
  border-radius: 999px;
  padding: 0.8rem 1.25rem;
  font-size: var(--step--1);
  line-height: 1;
  cursor: pointer;
  transition: filter 0.2s ease;
}
.button--primary {
  background: var(--brand-2);
  color: var(--on-brand);
}
.button--secondary {
  background: var(--brand-1);
  color: var(--on-brand);
}
.button--outline {
  background: transparent;
  border-color: var(--on-brand);
  color: var(--on-brand);
}
.button--block {
  width: 100%;
  justify-content: center;
}
.button:hover {
  filter: brightness(1.1);
}

</style>