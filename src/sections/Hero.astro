---
// src/components/Hero.astro
import Button from '@/components/Button.astro';
import { contact, getWhatsAppLink } from '@/contact'; // <<<<< AGREGADO

interface CTA {
  text: string;
  href?: string;
  external?: boolean;
}

interface Props {
  title: string;
  subtitle?: string;
  image?: string | ImageMetadata; 
  ctaPrimary?: CTA;
  ctaSecondary?: CTA;
  seal?: string;
}

const { title, subtitle, image, ctaPrimary, ctaSecondary, seal } = Astro.props;
const imageUrl = image ? (typeof image === 'string' ? image : image.src) : undefined;

---

<section class="hero" aria-labelledby="hero-title">
  {imageUrl && (
    <div
      class="hero__bg"
      aria-hidden="true"
      style={`background-image: linear-gradient(rgba(11,31,75,0.65), rgba(11,31,75,0.95)), url(${imageUrl});`}
    ></div>
  )}

  <div class="u-container hero__inner">
    <h1 id="hero-title" class="hero__title">{title}</h1>
    {subtitle && <p class="hero__subtitle">{subtitle}</p>}

    {(ctaPrimary || ctaSecondary) && (
      <div class="hero__actions">
        {ctaPrimary && (
  <>
    <Button
      href={getWhatsAppLink(contact.phones[0].number, contact.phones[0].whatsappMessage, true)}
      variant="primary"
      device="desktop"
      external={ctaPrimary.external ?? true}
    >
      {ctaPrimary.text}
    </Button>
    <Button
      href={getWhatsAppLink(contact.phones[0].number, contact.phones[0].whatsappMessage, false)}
      variant="primary"
      device="mobile"
      external={ctaPrimary.external ?? true}
    >
      {ctaPrimary.text}
    </Button>
  </>
)}
        {ctaSecondary && (
          <Button
            href={ctaSecondary.href}
            variant="secondary"
            device="all"
            external={ctaSecondary.external ?? false}
          >
            {ctaSecondary.text}
          </Button>
        )}
      </div>
    )}

    {seal && <p class="hero__seal">{seal}</p>}
  </div>
</section>

<style>
.hero {
  position: relative;
  background: #0b1f4b;
  color: var(--on-brand);
  text-align: center;
  overflow: hidden;
}

.hero__inner {
  position: relative;
  z-index: 1;
  padding: 4rem 1rem;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.hero__bg {
  position: absolute;
  inset: 0;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  filter: grayscale(0.2);
  opacity: 0.8;
}

.hero__title {
  font-family: var(--font-serif);
  font-size: var(--step-4);
  line-height: 1.1;
  margin: 0 0 0.75rem;
  letter-spacing: -0.02em;
  max-width: 20ch;
}

.hero__subtitle {
  font-size: var(--step-1);
  margin: 0 0 1.5rem;
  color: #e5efff;
  max-width: 50ch;
}

.hero__actions {
  display: flex;
  flex-wrap: wrap;
  gap: 0.75rem;
  justify-content: center;
}

.hero__seal {
  margin-top: 1.5rem;
  font-size: var(--step--1);
  color: #d9e3ff;
}

@media (min-width: 960px) {
  .hero__inner {
    padding: 6rem 0;
  }
}
</style>
